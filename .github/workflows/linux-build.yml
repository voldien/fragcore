name: FragCore Linux
on:
  push:
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  linux:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
        platform: [x32, x64]
        compiler: [gcc, clang]

    name: Linux FragCore Library ${{ matrix.os }} ${{ matrix.platform }}  ${{ matrix.compiler }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Configure dependencies
        run: |
          sudo apt-get update
          sudo apt-get install pkg-config libssl-dev libgtest-dev libsubunit-dev libogg-dev libopus-dev libvorbis-dev \
          libzip-dev  libnoise-dev libvdpau-dev libalut-dev libspdlog-dev libbz2-dev \
          libcurl4 libcurl4-gnutls-dev libfmt-dev binutils-dev libeigen3-dev libomp-dev \
          zip gzip googletest libglm-dev 

      - name: Configure modules dependencies
        run: |
          sudo apt-get install libavcodec-dev libavfilter-dev libavformat-dev libfreetype6-dev libsqlite3-dev \
          libglfw3-dev libopenal-dev mesa-common-dev libopengl-dev libglu1-mesa-dev libvulkan-dev libgl1-mesa-dev libsdl2-dev libsdl2-dev libfreeimage-dev \
          liblz4-dev libbz2-dev

      - name: Create Build Environment
        env:
          CC: ${{ matrix.compiler }}
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake

        shell: bash
        working-directory: ${{runner.workspace}}/build
        env:
          CC: ${{ matrix.compiler }}
        run: |
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_WITH_TEST=ON -DBUILD_WITH_UBSAN=OFF \
          -DBUILD_WITH_ASAN=OFF -DBUILD_WITH_INSTALL=ON -DBUILD_WITH_COVERAGE=ON -DBUILD_OPT_BUILD_PACKAGES=ON \
          -DBUILD_MODULES=ON

      - name: Build-Core
        env:
          CC: ${{ matrix.compiler }}
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE