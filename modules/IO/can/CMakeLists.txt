
FILE(GLOB IONET_CAN_SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)

# Library target.
ADD_LIBRARY(fragcore-ionet-can SHARED ${IONET_CAN_SOURCE_FILES})
TARGET_LINK_LIBRARIES(fragcore-ionet-can fragcore) #
TARGET_COMPILE_DEFINITIONS(fragcore-ionet-can PRIVATE FRAG_CORE_INTERNAL_IMP=1)
#
TARGET_INCLUDE_DIRECTORIES(fragcore-ionet-can PUBLIC
							$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
							$<INSTALL_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> )
ADD_DEPENDENCIES(fragcore-ionet-can fragcore)

IF (BUILD_SHARED_LIBS AND CMAKE_SIZEOF_VOID_P EQUAL 8)
	SET_PROPERTY(TARGET fragcore-ionet-can PROPERTY POSITION_INDEPENDENT_CODE ON)
ENDIF()

#
ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/samples/can)


#
IF(BUILD_WITH_INSTALL)
    INSTALL(TARGETS fragcore-ionet-can DESTINATION lib COMPONENT ${LIBFRAGCORE_COMPONENT})
ENDIF()

IF(CMAKE_TESTING_ENABLED)
	ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/test)
ENDIF(CMAKE_TESTING_ENABLED)
