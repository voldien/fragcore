
FILE(GLOB IONET_CURL_SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
FILE(GLOB IONET_CURL_HEADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

#
FIND_PACKAGE(CURL REQUIRED)
IF(CURL_FOUND)
	MESSAGE(STATUS "Found Curl: ${CURL_LIBRARIES} - ${CURL_VERSION_STRING}")
ENDIF()

# Library target.
ADD_LIBRARY(fragcore-ionet-curl SHARED ${IONET_CURL_SOURCE_FILES} ${IONET_CURL_HEADER_FILES})
TARGET_LINK_LIBRARIES(fragcore-ionet-curl PUBLIC fragcore ${CURL_LIBRARIES}) #
TARGET_COMPILE_DEFINITIONS(fragcore-ionet-curl PRIVATE FRAG_CORE_INTERNAL_IMP=1)
#
TARGET_INCLUDE_DIRECTORIES(fragcore-ionet-curl PRIVATE  ${CURL_INCLUDE_DIRS} PUBLIC
							$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
							$<INSTALL_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> )
ADD_DEPENDENCIES(fragcore-ionet-curl fragcore)

# Sample Program
ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/samples)


#
IF(BUILD_WITH_INSTALL)
    INSTALL(TARGETS fragcore-ionet-curl DESTINATION lib COMPONENT ${LIBFRAGCORE_COMPONENT})
ENDIF()
