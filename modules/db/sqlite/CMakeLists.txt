FIND_PACKAGE(PkgConfig)
FIND_PACKAGE(CURL)

IF(PKG_CONFIG_FOUND)
	PKG_CHECK_MODULES(SQLite3 REQUIRED sqlite3)   # Find SDL2 library
ELSE()

ENDIF()



FILE(GLOB SQLITE_DB_SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
FILE(GLOB SQLITE_DB_HEADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.h)


ADD_LIBRARY(fragcore-sqlite ${SQLITE_DB_SOURCE_FILES} ${SQLITE_DB_HEADER_FILES})

TARGET_LINK_LIBRARIES(fragcore-sqlite PUBLIC fragcore ${SQLite3_LIBRARIES})

TARGET_INCLUDE_DIRECTORIES (fragcore-sqlite
	PUBLIC
    ${CMAKE_CURRENT_SOURCE_DIR}
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
)


ADD_DEPENDENCIES(fragcore-sqlite fragcore)

IF (BUILD_SHARED_LIBS AND CMAKE_SIZEOF_VOID_P EQUAL 8) # -fPIC is only required
	SET_PROPERTY(TARGET fragcore-sqlite PROPERTY POSITION_INDEPENDENT_CODE ON)
ENDIF()

#
IF(BUILD_WITH_INSTALL)
    INSTALL(TARGETS fragcore-sqlite DESTINATION lib COMPONENT ${LIBFRAGCORE_COMPONENT})
ENDIF()

IF(CMAKE_TESTING_ENABLED)
	ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/test)
ENDIF()


ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/sample)