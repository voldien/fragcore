
FILE(GLOB FILESYSTEN_FSWATCH_SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
FILE(GLOB FILESYSTEN_FSWATCH_HEADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake" )
INCLUDE(fswatch)

# Library target.
ADD_LIBRARY(fragcore-fswatch-filenotify SHARED ${FILESYSTEN_FSWATCH_SOURCE_FILES} ${FILESYSTEN_FSWATCH_HEADER_FILES})
TARGET_LINK_LIBRARIES(fragcore-fswatch-filenotify PUBLIC fragcore private libfswatch)
TARGET_COMPILE_DEFINITIONS(fragcore-fswatch-filenotify PRIVATE FRAG_CORE_INTERNAL_IMP=1)

#
TARGET_INCLUDE_DIRECTORIES(fragcore-fswatch-filenotify PRIVATE
											PUBLIC
											$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
											$<INSTALL_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>)

ADD_DEPENDENCIES(fragcore-fswatch-filenotify fragcore )

IF (BUILD_SHARED_LIBS AND CMAKE_SIZEOF_VOID_P EQUAL 8) # -fPIC is only required
	SET_PROPERTY(TARGET fragcore-fswatch-filenotify PROPERTY POSITION_INDEPENDENT_CODE ON)
ENDIF()

#
IF(BUILD_WITH_INSTALL)
    INSTALL(TARGETS fragcore-fswatch-filenotify DESTINATION lib COMPONENT ${LIBFRAGCORE_COMPONENT})
ENDIF()

IF(CMAKE_TESTING_ENABLED)
	ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/test)
ENDIF()

