FILE(GLOB GEOMETRY_UTIL_SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
FILE(GLOB GEOMETRY_UTIL_HEADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

# Library target.
ADD_LIBRARY(fragcore-geometry-util SHARED ${GEOMETRY_UTIL_SOURCE_FILES} ${GEOMETRY_UTIL_HEADER_FILES})
TARGET_LINK_LIBRARIES(fragcore-geometry-util PUBLIC fragcore )
TARGET_COMPILE_DEFINITIONS(fragcore-geometry-util PRIVATE FRAG_CORE_INTERNAL_IMP=1)

#
TARGET_INCLUDE_DIRECTORIES(fragcore-geometry-util
											PUBLIC
											$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
											$<INSTALL_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>)

ADD_DEPENDENCIES(fragcore-geometry-util fragcore )

IF (BUILD_SHARED_LIBS AND CMAKE_SIZEOF_VOID_P EQUAL 8) # -fPIC is only required
	SET_PROPERTY(TARGET fragcore-geometry-util PROPERTY POSITION_INDEPENDENT_CODE ON)
ENDIF()

#
IF(BUILD_WITH_INSTALL)
    INSTALL(TARGETS fragcore-geometry-util DESTINATION lib COMPONENT ${LIBFRAGCORE_COMPONENT})
ENDIF()

IF(CMAKE_TESTING_ENABLED)
	ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/test)
ENDIF()

