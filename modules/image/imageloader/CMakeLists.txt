
FILE(GLOB IMAGE_LOADER_SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
FILE(GLOB IMAGE_LOADER_HEADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake" )
INCLUDE(tinyexr)
INCLUDE(etc2comp)
INCLUDE(freeimage)

# Library target.
ADD_LIBRARY(fragcore-imageloader SHARED ${IMAGE_LOADER_SOURCE_FILES} ${IMAGE_LOADER_HEADER_FILES})
TARGET_LINK_LIBRARIES(fragcore-imageloader PUBLIC fragcore fragcore-image freeimage)
TARGET_COMPILE_DEFINITIONS(fragcore-imageloader PRIVATE FRAG_CORE_INTERNAL_IMP=1)

#
TARGET_INCLUDE_DIRECTORIES(fragcore-imageloader
											PUBLIC
											${CMAKE_CURRENT_SOURCE_DIR}
											$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
											$<INSTALL_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>)

ADD_DEPENDENCIES(fragcore-imageloader fragcore fragcore-image)

IF (BUILD_SHARED_LIBS AND CMAKE_SIZEOF_VOID_P EQUAL 8)
	SET_PROPERTY(TARGET fragcore-imageloader PROPERTY POSITION_INDEPENDENT_CODE ON)
ENDIF()

#
IF(BUILD_WITH_INSTALL)
    INSTALL(TARGETS fragcore-imageloader DESTINATION lib COMPONENT ${LIBFRAGCORE_COMPONENT})
ENDIF()

IF(CMAKE_TESTING_ENABLED)
	ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/test)
ENDIF()

