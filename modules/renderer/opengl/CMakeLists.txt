SET(OpenGL_GL_PREFERENCE "GLVND")
#INCLUDE(FindOpenGL)
FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(GLEW REQUIRED)
FIND_pACKAGE(OpenGLES )

FIND_PACKAGE(PkgConfig)
IF(PKG_CONFIG_FOUND)

ENDIF()

IF(GLEW_FOUND)
    MESSAGE(STATUS "Glew found: ${GLEW_LIBRARIES}.")
ENDIF()

IF(OPENGL_FOUND)
    MESSAGE(STATUS "OpenGL found: ${OPENGL_LIBRARIES}.")
ENDIF()

IF(OpenGLES_FOUND)
    MESSAGE(STATUS "OpenGLES found: ${OPENGLES_EGL_LIBRARY}.")
ENDIF()

# Source files.
FILE(GLOB SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
FILE(GLOB HEADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

# Get the include directories for the target.
get_target_property(Fragcore_INCLUDE_DIRS fragcore INCLUDE_DIRECTORIES)

#
ADD_LIBRARY(fragcore-rgl SHARED ${SOURCE_FILES} ${HEADER_FILES} )
TARGET_LINK_LIBRARIES(fragcore-rgl ${OPENGL_LIBRARIES} ${GLEW_LIBRARIES} ${OPENGLES_EGL_LIBRARY} fragcore)
TARGET_COMPILE_DEFINITIONS(fragcore-rgl PRIVATE FRAG_CORE_INTERNAL_IMP=1)

# OpenGL dependies headers.
TARGET_INCLUDE_DIRECTORIES(fragcore-rgl PRIVATE ${OPENGL_INCLUDE_DIR} ${GLEW_INCLUDE_DIRS} ${Fragcore_INCLUDE_DIRS} )
ADD_DEPENDENCIES(fragcore-rgl fragcore)

IF(BUILD_WITH_INSTALL)
    INSTALL(TARGETS fragcore-rgl DESTINATION lib COMPONENT ${LIBFRAGCORE_COMPONENT})
ENDIF()
