FILE(GLOB SHADER_COMPILER_SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
FILE(GLOB SHADER_COMPILER_HEADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.h)


LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake" )
IF(NOT TARGET spirv-cross-glsl AND NOT TARGET spirv-cross-core AND NOT TARGET spirv-cross-util)
	INCLUDE(spirvcross)
ENDIF()

IF (BUILD_SHARED_LIBS AND CMAKE_SIZEOF_VOID_P EQUAL 8)
	SET_PROPERTY(TARGET spirv-cross-glsl spirv-cross-core PROPERTY POSITION_INDEPENDENT_CODE ON)
ENDIF()

# Library target.
ADD_LIBRARY(fragcore-shader-compiler SHARED ${SHADER_COMPILER_SOURCE_FILES} ${SHADER_COMPILER_HEADER_FILES})
TARGET_LINK_LIBRARIES(fragcore-shader-compiler PUBLIC fragcore-render-interface spirv-cross-glsl spirv-cross-core) #
TARGET_COMPILE_DEFINITIONS(fragcore-shader-compiler PRIVATE FRAG_CORE_INTERNAL_IMP=1)

#
TARGET_INCLUDE_DIRECTORIES(fragcore-shader-compiler PUBLIC
											$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
											$<INSTALL_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>)

ADD_DEPENDENCIES(fragcore-shader-compiler fragcore )

IF (BUILD_SHARED_LIBS AND CMAKE_SIZEOF_VOID_P EQUAL 8)
	SET_PROPERTY(TARGET fragcore-shader-compiler PROPERTY POSITION_INDEPENDENT_CODE ON)
ENDIF()

#
IF(BUILD_WITH_INSTALL)
    INSTALL(TARGETS fragcore-shader-compiler DESTINATION lib COMPONENT ${LIBFRAGCORE_COMPONENT})
ENDIF()