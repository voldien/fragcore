FILE(GLOB TASK_SCH_SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
FILE(GLOB TASK_SCH_HEADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake" )

# Library target.
ADD_LIBRARY(fragcore-scheduler-tasksch ${TASK_SCH_SOURCE_FILES} ${TASK_SCH_HEADER_FILES})
TARGET_LINK_LIBRARIES(fragcore-scheduler-tasksch PUBLIC fragcore taskSch) #
TARGET_COMPILE_DEFINITIONS(fragcore-scheduler-tasksch PRIVATE FRAG_CORE_INTERNAL_IMP=1)

IF (BUILD_SHARED_LIBS AND CMAKE_SIZEOF_VOID_P EQUAL 8)
	SET_PROPERTY(TARGET fragcore-scheduler-tasksch PROPERTY POSITION_INDEPENDENT_CODE ON)
ENDIF()

#
TARGET_INCLUDE_DIRECTORIES(fragcore-scheduler-tasksch PUBLIC
							${CMAKE_CURRENT_SOURCE_DIR}
							$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
							$<INSTALL_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> )
ADD_DEPENDENCIES(fragcore-scheduler-tasksch fragcore taskSch)

#
IF(BUILD_WITH_INSTALL)
    INSTALL(TARGETS fragcore-scheduler-tasksch taskSch DESTINATION lib COMPONENT ${LIBFRAGCORE_COMPONENT})
ENDIF()
