
#
#

FIND_PACKAGE(SDL2 QUIET)

IF(SDL2_FOUND)
	MESSAGE(STATUS "SDL2 found: ${SDL2_LIBRARIES} -- ${SDL2_VERSION_STRING} (${SDL2_INCLUDE_DIRS})")

ELSEIF(NOT SDL2_FOUND)
	IF(PKG_CONFIG_FOUND)
		MESSAGE(STATUS "Found pkg-config: ${PKG_CONFIG_EXECUTABLE} -- version ${PKG_CONFIG_VERSION_STRING}.")
		PKG_CHECK_MODULES(SDL QUIET sdl2)
	ELSE()
		MESSAGE(WARNING "Could not find PKG ")
		# TODO add logic for handling if pkg-config not available.

	ENDIF()
ELSE()
	MESSAGE(WARNING "Could not find SDL2!")
ENDIF()




FILE(GLOB SDL_WINDOW_SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
FILE(GLOB SDL_WINDOW_HEADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

# Core library for adding support for plugin.
ADD_LIBRARY(fragcore-window-sdl ${SDL_WINDOW_SOURCE_FILES} ${SDL_WINDOW_HEADER_FILES})
ADD_DEPENDENCIES( fragcore-window-sdl  fragcore )

#
TARGET_COMPILE_DEFINITIONS(fragcore-window-sdl PRIVATE FRAG_CORE_INTERNAL_IMP=1)

#
SET_TARGET_PROPERTIES(fragcore-window-sdl PROPERTIES
		COMPILE_FLAGS " ${SDL2_OTHER_CFLAGS}")

#
TARGET_LINK_LIBRARIES(fragcore-window-sdl PUBLIC fragcore PRIVATE ${SDL2_LIBRARIES} )

#
TARGET_INCLUDE_DIRECTORIES(fragcore-window-sdl PUBLIC ${SDL2_INCLUDE_DIRS}
											$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
											$<INSTALL_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>)
